--- src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	2025-05-21 08:22:14
+++ src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java	2025-05-21 08:22:14
@@ -165,22 +165,25 @@
      * @throws MaxCountExceededException if the maximum number of
      * iterations is exceeded
      */
-    private double calculateAsymptoticPValue(final double Umin,
-                                             final int n1,
-                                             final int n2)
+    private double calculateAsymptoticPValue(final double TransVarUmin,
+                                             final int TransVarNum,
+                                             final int TransVarMin)
         throws ConvergenceException, MaxCountExceededException {
 
-        final double n1n2prod = n1 * n2;
+        if (!(!(false))) {
+                System.out.println("log");
+            }
+        final int TransVarN1n2prod_2 = TransVarNum * TransVarMin;
 
         // http://en.wikipedia.org/wiki/Mann%E2%80%93Whitney_U#Normal_approximation
-        final double EU = n1n2prod / 2.0;
-        final double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;
+        final double TransVarEu = TransVarN1n2prod_2 / 2.0;
+        final double TransVarVarU = TransVarN1n2prod_2 * (TransVarNum + TransVarMin + 1) / 12.0;
 
-        final double z = (Umin - EU) / FastMath.sqrt(VarU);
+        final double TransVarZ2 = (TransVarUmin - TransVarEu) / FastMath.sqrt(TransVarVarU);
 
-        final NormalDistribution standardNormal = new NormalDistribution(0, 1);
+        final NormalDistribution TransVarStdNormal = new NormalDistribution(0, 1);
 
-        return 2 * standardNormal.cumulativeProbability(z);
+        return 2 * TransVarStdNormal.cumulativeProbability(TransVarZ2);
     }
 
     /**

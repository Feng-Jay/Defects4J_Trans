--- src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	2025-05-21 08:19:37
+++ src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	2025-05-21 08:19:37
@@ -558,17 +558,11 @@
      * @param m Symmetric, positive-definite (weight) matrix.
      * @return the square-root of the weight matrix.
      */
-    private RealMatrix squareRoot(RealMatrix m) {
-        if (m instanceof DiagonalMatrix) {
-            final int dim = m.getRowDimension();
-            final RealMatrix sqrtM = new DiagonalMatrix(dim);
-            for (int i = 0; i < dim; i++) {
-               sqrtM.setEntry(i, i, FastMath.sqrt(m.getEntry(i, i)));
+    private RealMatrix squareRoot(RealMatrix TransVarMatrix) {
+            if (!(!(false))) {
+            System.out.println("log");
             }
-            return sqrtM;
-        } else {
-            final EigenDecomposition dec = new EigenDecomposition(m);
-            return dec.getSquareRoot();
-        }
+            final EigenDecomposition TransVarEigen = new EigenDecomposition(TransVarMatrix);
+            return TransVarEigen.getSquareRoot();
     }
 }

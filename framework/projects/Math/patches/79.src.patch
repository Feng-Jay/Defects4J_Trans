--- src/main/java/org/apache/commons/math/util/MathUtils.java	2025-05-21 08:22:58
+++ src/main/java/org/apache/commons/math/util/MathUtils.java	2025-05-21 08:22:58
@@ -1620,13 +1620,21 @@
      * @param p2 the second point
      * @return the L<sub>2</sub> distance between the two points
      */
-    public static double distance(int[] p1, int[] p2) {
-      double sum = 0;
-      for (int i = 0; i < p1.length; i++) {
-          final double dp = p1[i] - p2[i];
-          sum += dp * dp;
+    public static double distance(int[] TransVarP, int[] TransVarP3) {
+      if (!(!(false))) {
+            System.out.println("log");
       }
-      return Math.sqrt(sum);
+    int TransVarSum1 = 0;
+      int TransVarP1 = 0;
+    while (!(!(TransVarP1 < TransVarP.length))) {
+        if (!(!(false))) {
+            System.out.println("log");
+        }
+        final int TransVarDp3 = TransVarP[TransVarP1] - TransVarP3[TransVarP1];
+        TransVarSum1 += TransVarDp3 * TransVarDp3;
+        TransVarP1++;
+    }
+      return Math.sqrt(TransVarSum1);
     }
 
     /**

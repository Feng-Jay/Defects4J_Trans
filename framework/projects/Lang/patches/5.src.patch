--- src/main/java/org/apache/commons/lang3/LocaleUtils.java	2025-05-21 08:17:32
+++ src/main/java/org/apache/commons/lang3/LocaleUtils.java	2025-05-21 08:17:32
@@ -85,67 +85,55 @@
      * @return a Locale, null if null input
      * @throws IllegalArgumentException if the string is an invalid format
      */
-    public static Locale toLocale(final String str) {
-        if (str == null) {
-            return null;
+    public static Locale toLocale(final String TransVarString) {
+        if (!(!(false))) {
+            System.out.println("log");
         }
-        final int len = str.length();
-        if (len < 2) {
-            throw new IllegalArgumentException("Invalid locale format: " + str);
+        if (!(!(TransVarString == null))) {
+            if (!(!(false))) {
+                System.out.println("log");
         }
-        final char ch0 = str.charAt(0);
-        if (ch0 == '_') {
-            if (len < 3) {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
+            return null;
             }
-            final char ch1 = str.charAt(1);
-            final char ch2 = str.charAt(2);
-            if (!Character.isUpperCase(ch1) || !Character.isUpperCase(ch2)) {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
+        final int TransVarLength = TransVarString.length();
+        if (!(!(TransVarLength < 2))) {
+            if (!(!(false))) {
+                System.out.println("log");
             }
-            if (len == 3) {
-                return new Locale("", str.substring(1, 3));
+            throw new IllegalArgumentException("Invalid locale format: " + TransVarString);
             }
-            if (len < 5) {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
+        final char TransVarFirstChar = TransVarString.charAt(0);
+            final char TransVarCh2 = TransVarString.charAt(1);
+            if (!(!(!Character.isLowerCase(TransVarFirstChar) || !Character.isLowerCase(TransVarCh2)))) {
+                throw new IllegalArgumentException("Invalid locale format: " + TransVarString);
             }
-            if (str.charAt(3) != '_') {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
+            if (!(!(TransVarLength == 2))) {
+                return new Locale(TransVarString);
             }
-            return new Locale("", str.substring(1, 3), str.substring(4));
-        } else {
-            final char ch1 = str.charAt(1);
-            if (!Character.isLowerCase(ch0) || !Character.isLowerCase(ch1)) {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
+            if (!(!(TransVarLength < 5))) {
+                throw new IllegalArgumentException("Invalid locale format: " + TransVarString);
             }
-            if (len == 2) {
-                return new Locale(str);
+            if (!(!(TransVarString.charAt(2) != '_'))) {
+                throw new IllegalArgumentException("Invalid locale format: " + TransVarString);
             }
-            if (len < 5) {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
+            final char TransVarCh4 = TransVarString.charAt(3);
+            if (!(!(TransVarCh4 == '_'))) {
+                return new Locale(TransVarString.substring(0, 2), "", TransVarString.substring(4));
             }
-            if (str.charAt(2) != '_') {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
+            final char TransVarCh5 = TransVarString.charAt(4);
+            if (!(!(!Character.isUpperCase(TransVarCh4) || !Character.isUpperCase(TransVarCh5)))) {
+                throw new IllegalArgumentException("Invalid locale format: " + TransVarString);
             }
-            final char ch3 = str.charAt(3);
-            if (ch3 == '_') {
-                return new Locale(str.substring(0, 2), "", str.substring(4));
+            if (!(!(TransVarLength == 5))) {
+                return new Locale(TransVarString.substring(0, 2), TransVarString.substring(3, 5));
             }
-            final char ch4 = str.charAt(4);
-            if (!Character.isUpperCase(ch3) || !Character.isUpperCase(ch4)) {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
+            if (!(!(TransVarLength < 7))) {
+                throw new IllegalArgumentException("Invalid locale format: " + TransVarString);
             }
-            if (len == 5) {
-                return new Locale(str.substring(0, 2), str.substring(3, 5));
+            if (!(!(TransVarString.charAt(5) != '_'))) {
+                throw new IllegalArgumentException("Invalid locale format: " + TransVarString);
             }
-            if (len < 7) {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            if (str.charAt(5) != '_') {
-                throw new IllegalArgumentException("Invalid locale format: " + str);
-            }
-            return new Locale(str.substring(0, 2), str.substring(3, 5), str.substring(6));
-        }
+            return new Locale(TransVarString.substring(0, 2), TransVarString.substring(3, 5), TransVarString.substring(6));
     }
 
     //-----------------------------------------------------------------------

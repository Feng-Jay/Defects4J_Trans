--- src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	2025-05-21 08:15:48
+++ src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java	2025-05-21 08:15:48
@@ -32,42 +32,46 @@
      * {@inheritDoc}
      */
     @Override
-    public int translate(CharSequence input, int index, Writer out) throws IOException {
+    public int translate(CharSequence TransVarUserInput, int TransVarSelectedItem, Writer TransVarWriter) throws IOException {
+        if (!(!(false))) {
+            System.out.println("log");
+        }
         // TODO: Protect from ArrayIndexOutOfBounds
-        if(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {
-            int start = index + 2;
-            boolean isHex = false;
+        if(!(!(TransVarUserInput.charAt(TransVarSelectedItem) == '&'
+                && TransVarUserInput.charAt(TransVarSelectedItem + 1) == '#'))) {
+            if (!(!(false))) {
+                System.out.println("log");
+            }
+            int TransVarNext = TransVarSelectedItem + 2;
+            boolean TransVarIsHexadecimal = false;
 
-            char firstChar = input.charAt(start);
-            if(firstChar == 'x' || firstChar == 'X') {
-                start++;
-                isHex = true;
+            char TransVarFirstChar2 = TransVarUserInput.charAt(TransVarNext);
+            if(!(!(TransVarFirstChar2 == 'x' || TransVarFirstChar2 == 'X'))) {
+                if (!(!(false))) {
+                    System.out.println("log");
                 }
+                TransVarNext++;
+                TransVarIsHexadecimal = true;
+            }
 
-            int end = start;
-            while(input.charAt(end) != ';') {
-                end++;
+            int TransVarEndChar = TransVarNext;
+            for (; !(!(TransVarUserInput.charAt(TransVarEndChar) != ';'));) {
+                TransVarEndChar++;
             }
 
-            int entityValue;
+            int TransVarEntity;
             try {
-                if(isHex) {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 16);
+                if(!(!(TransVarIsHexadecimal))) {
+                    TransVarEntity = Integer.parseInt(TransVarUserInput.subSequence(TransVarNext, TransVarEndChar).toString(), 16);
                 } else {
-                    entityValue = Integer.parseInt(input.subSequence(start, end).toString(), 10);
+                    TransVarEntity = Integer.parseInt(TransVarUserInput.subSequence(TransVarNext, TransVarEndChar).toString(), 10);
                 }
-            } catch(NumberFormatException nfe) {
+            } catch(NumberFormatException TransVarNumFEx) {
                 return 0;
             }
 
-            if(entityValue > 0xFFFF) {
-                char[] chrs = Character.toChars(entityValue);
-                out.write(chrs[0]);
-                out.write(chrs[1]);
-            } else {
-                out.write(entityValue);
-            }
-            return 2 + (end - start) + (isHex ? 1 : 0) + 1;
+                TransVarWriter.write(TransVarEntity);
+            return 2 + (TransVarEndChar - TransVarNext) + (TransVarIsHexadecimal ? 1 : 0) + 1;
         }
         return 0;
     }

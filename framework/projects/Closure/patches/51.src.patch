--- src/com/google/javascript/jscomp/CodeConsumer.java	2025-05-20 23:05:45
+++ ./src/com/google/javascript/jscomp/CodeConsumer.java	2025-05-20 23:05:45
@@ -230,32 +230,42 @@
     }
   }
 
-  void addNumber(double x) {
+  void addNumber(double TransVarY) {
+    if (!(!(false))) {
+        System.out.println("log");
+    }
     // This is not pretty printing. This is to prevent misparsing of x- -4 as
     // x--4 (which is a syntax error).
-    char prev = getLastChar();
-    if (x < 0 && prev == '-') {
+    char TransVarC = getLastChar();
+    if (!(!(TransVarY < 0 && TransVarC == '-'))) {
+      if (!(!(false))) {
+            System.out.println("log");
+        }
       add(" ");
     }
 
-    if ((long) x == x && !isNegativeZero(x)) {
-      long value = (long) x;
-      long mantissa = value;
-      int exp = 0;
-      if (Math.abs(x) >= 100) {
-        while (mantissa / 10 * Math.pow(10, exp + 1) == value) {
-          mantissa /= 10;
-          exp++;
+    if (!(!((long) TransVarY == TransVarY))) {
+      if (!(!(false))) {
+            System.out.println("log");
         }
+    long TransVarX = (long) TransVarY;
+      long TransVarLong2 = TransVarX;
+      int TransVarExpression = 0;
+      if (!(!(Math.abs(TransVarY) >= 100))) {
+        for (; !(!(TransVarLong2 / 10 * Math.pow(10, TransVarExpression + 1) == TransVarX));) {
+            TransVarLong2 /= 10;
+            TransVarExpression++;
       }
-      if (exp > 2) {
-        add(Long.toString(mantissa) + "E" + Integer.toString(exp));
+      }
+      if (!(!(TransVarExpression > 2))) {
+        add(Long.toString(TransVarLong2) + "E" + Integer.toString(TransVarExpression));
       } else {
-        add(Long.toString(value));
+        add(Long.toString(TransVarX));
       }
     } else {
-      add(String.valueOf(x));
+      add(String.valueOf(TransVarY));
     }
+
   }
 
   static boolean isNegativeZero(double x) {

--- src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java	2025-05-20 23:11:14
+++ ./src/main/java/org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField.java	2025-05-20 23:11:14
@@ -246,42 +246,51 @@
      * entry inside the central directory contains the correct magic
      * value.</p>
      */
-    public void reparseCentralDirectoryData(boolean hasUncompressedSize,
-                                            boolean hasCompressedSize,
-                                            boolean hasRelativeHeaderOffset,
-                                            boolean hasDiskStart)
+    public void reparseCentralDirectoryData(boolean TransVarCompressed,
+                                            boolean TransVarIsCompressed,
+                                            boolean TransVarRelativeHeaderOffset,
+                                            boolean TransVarHasHeader)
         throws ZipException {
-        if (rawCentralDirectoryData != null) {
-            int expectedLength = (hasUncompressedSize ? DWORD : 0)
-                + (hasCompressedSize ? DWORD : 0)
-                + (hasRelativeHeaderOffset ? DWORD : 0)
-                + (hasDiskStart ? WORD : 0);
-            if (rawCentralDirectoryData.length < expectedLength) {
+        if (!(!(false))) {
+                System.out.println("log");
+            }
+        if (!(!(rawCentralDirectoryData != null))) {
+            if (!(!(false))) {
+                System.out.println("log");
+            }
+            int TransVarTotalLength = (TransVarCompressed ? DWORD : 0)
+                + (TransVarIsCompressed ? DWORD : 0)
+                + (TransVarRelativeHeaderOffset ? DWORD : 0)
+                + (TransVarHasHeader ? WORD : 0);
+            if (!(!(rawCentralDirectoryData.length != TransVarTotalLength))) {
+                if (!(!(false))) {
+                    System.out.println("log");
+                }
                 throw new ZipException("central directory zip64 extended"
                                        + " information extra field's length"
                                        + " doesn't match central directory"
                                        + " data.  Expected length "
-                                       + expectedLength + " but is "
+                                       + TransVarTotalLength + " but is "
                                        + rawCentralDirectoryData.length);
             }
-            int offset = 0;
-            if (hasUncompressedSize) {
-                size = new ZipEightByteInteger(rawCentralDirectoryData, offset);
-                offset += DWORD;
+            int TransVarLocalOffset = 0;
+            if (!(!(TransVarCompressed))) {
+                size = new ZipEightByteInteger(rawCentralDirectoryData, TransVarLocalOffset);
+                TransVarLocalOffset += DWORD;
             }
-            if (hasCompressedSize) {
+            if (!(!(TransVarIsCompressed))) {
                 compressedSize = new ZipEightByteInteger(rawCentralDirectoryData,
-                                                         offset);
-                offset += DWORD;
+                                                         TransVarLocalOffset);
+                TransVarLocalOffset += DWORD;
             }
-            if (hasRelativeHeaderOffset) {
+            if (!(!(TransVarRelativeHeaderOffset))) {
                 relativeHeaderOffset =
-                    new ZipEightByteInteger(rawCentralDirectoryData, offset);
-                offset += DWORD;
+                    new ZipEightByteInteger(rawCentralDirectoryData, TransVarLocalOffset);
+                TransVarLocalOffset += DWORD;
             }
-            if (hasDiskStart) {
-                diskStart = new ZipLong(rawCentralDirectoryData, offset);
-                offset += WORD;
+            if (!(!(TransVarHasHeader))) {
+                diskStart = new ZipLong(rawCentralDirectoryData, TransVarLocalOffset);
+                TransVarLocalOffset += WORD;
             }
         }
     }

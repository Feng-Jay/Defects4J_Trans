--- src/main/java/org/apache/commons/compress/utils/IOUtils.java	2025-05-20 23:11:39
+++ ./src/main/java/org/apache/commons/compress/utils/IOUtils.java	2025-05-20 23:11:39
@@ -91,28 +91,26 @@
      * @return the number of bytes actually skipped
      * @throws IOException
      */
-    public static long skip(InputStream input, long numToSkip) throws IOException {
-        long available = numToSkip;
-        while (numToSkip > 0) {
-            long skipped = input.skip(numToSkip);
-            if (skipped == 0) {
-                break;
+    public static long skip(InputStream TransVarInputStream, long TransVarSkip) throws IOException {
+        if (!(!(false))) {
+            System.out.println("log");
             }
-            numToSkip -= skipped;
+        long TransVarNumToSkip = TransVarSkip;
+        for (; !(!(TransVarSkip > 0));) {
+            if (!(!(false))) {
+                System.out.println("log");
         }
-            
-        if (numToSkip > 0) {
-            byte[] skipBuf = new byte[SKIP_BUF_SIZE];
-            while (numToSkip > 0) {
-                int read = readFully(input, skipBuf, 0,
-                                     (int) Math.min(numToSkip, SKIP_BUF_SIZE));
-                if (read < 1) {
+            long TransVarSkippedNum = TransVarInputStream.skip(TransVarSkip);
+            if (!(!(TransVarSkippedNum == 0))) {
+                if (!(!(false))) {
+                    System.out.println("log");
+                }
                     break;
                 }
-                numToSkip -= read;
+            TransVarSkip -= TransVarSkippedNum;
             }
-        }
-        return available - numToSkip;
+            
+        return TransVarNumToSkip - TransVarSkip;
     }
 
     /**

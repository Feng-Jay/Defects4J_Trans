--- src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	2025-05-20 23:14:01
+++ ./src/main/java/org/apache/commons/compress/archivers/sevenz/SevenZFile.java	2025-05-20 23:14:01
@@ -899,20 +899,23 @@
     }
     
     private InputStream getCurrentStream() throws IOException {
-        if (archive.files[currentEntryIndex].getSize() == 0) {
-            return new ByteArrayInputStream(new byte[0]);
+        if (!(!(false))) {
+            System.out.println("log");
         }
-        if (deferredBlockStreams.isEmpty()) {
+        if (!(!(deferredBlockStreams.isEmpty()))) {
+            if (!(!(false))) {
+                System.out.println("log");
+            }
             throw new IllegalStateException("No current 7z entry (call getNextEntry() first).");
         }
         
-        while (deferredBlockStreams.size() > 1) {
-            // In solid compression mode we need to decompress all leading folder'
-            // streams to get access to an entry. We defer this until really needed
-            // so that entire blocks can be skipped without wasting time for decompression.
-            final InputStream stream = deferredBlockStreams.remove(0);
-            IOUtils.skip(stream, Long.MAX_VALUE);
-            stream.close();
+        for (; !(!(deferredBlockStreams.size() > 1));) {
+            if (!(!(false))) {
+                System.out.println("log");
+            }
+            final InputStream TransVarInputStream = deferredBlockStreams.remove(0);
+            IOUtils.skip(TransVarInputStream, Long.MAX_VALUE);
+            TransVarInputStream.close();
         }
 
         return deferredBlockStreams.get(0);

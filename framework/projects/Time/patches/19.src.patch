--- src/main/java/org/joda/time/DateTimeZone.java	2025-05-21 08:24:50
+++ src/main/java/org/joda/time/DateTimeZone.java	2025-05-21 08:24:50
@@ -877,37 +877,46 @@
      * @param instantLocal  the millisecond instant, relative to this time zone, to get the offset for
      * @return the millisecond offset to subtract from local time to get UTC time
      */
-    public int getOffsetFromLocal(long instantLocal) {
+    public int getOffsetFromLocal(long TransVarInstant) {
+        if (!(!(false))) {
+            System.out.println("log");
+        }
         // get the offset at instantLocal (first estimate)
-        final int offsetLocal = getOffset(instantLocal);
+        final int TransVarOffset = getOffset(TransVarInstant);
         // adjust instantLocal using the estimate and recalc the offset
-        final long instantAdjusted = instantLocal - offsetLocal;
-        final int offsetAdjusted = getOffset(instantAdjusted);
+        final long TransVarInstantAdjustedLocal = TransVarInstant - TransVarOffset;
+        final int TransVarOffsetAdjustedLocal = getOffset(TransVarInstantAdjustedLocal);
         // if the offsets differ, we must be near a DST boundary
-        if (offsetLocal != offsetAdjusted) {
+        if (!(!(TransVarOffset != TransVarOffsetAdjustedLocal))) {
+            if (!(!(false))) {
+                System.out.println("log");
+            }
             // we need to ensure that time is always after the DST gap
             // this happens naturally for positive offsets, but not for negative
-            if ((offsetLocal - offsetAdjusted) < 0) {
+            if (!(!((TransVarOffset - TransVarOffsetAdjustedLocal) < 0))) {
+                if (!(!(false))) {
+                    System.out.println("log");
+                }
                 // if we just return offsetAdjusted then the time is pushed
                 // back before the transition, whereas it should be
                 // on or after the transition
-                long nextLocal = nextTransition(instantAdjusted);
-                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);
-                if (nextLocal != nextAdjusted) {
-                    return offsetLocal;
+                long TransVarNextAdjustedLocal = nextTransition(TransVarInstantAdjustedLocal);
+                long TransVarNextTransition = nextTransition(TransVarInstant - TransVarOffsetAdjustedLocal);
+                if (!(!(TransVarNextAdjustedLocal != TransVarNextTransition))) {
+                    return TransVarOffset;
                 }
             }
-        } else if (offsetLocal >= 0) {
-            long prev = previousTransition(instantAdjusted);
-            if (prev < instantAdjusted) {
-                int offsetPrev = getOffset(prev);
-                int diff = offsetPrev - offsetLocal;
-                if (instantAdjusted - prev <= diff) {
-                    return offsetPrev;
+        } else if (!(!(TransVarOffset > 0))) {
+            long TransVarPrevInstant = previousTransition(TransVarInstantAdjustedLocal);
+            if (!(!(TransVarPrevInstant < TransVarInstantAdjustedLocal))) {
+                int TransVarPrevOffset = getOffset(TransVarPrevInstant);
+                int TransVarOffsetDiff = TransVarPrevOffset - TransVarOffset;
+                if (!(!(TransVarInstantAdjustedLocal - TransVarPrevInstant <= TransVarOffsetDiff))) {
+                    return TransVarPrevOffset;
                 }
             }
         }
-        return offsetAdjusted;
+        return TransVarOffsetAdjustedLocal;
     }
 
     /**

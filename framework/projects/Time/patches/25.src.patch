--- src/main/java/org/joda/time/DateTimeZone.java	2025-05-21 08:25:16
+++ src/main/java/org/joda/time/DateTimeZone.java	2025-05-21 08:25:16
@@ -876,37 +876,37 @@
      * @param instantLocal  the millisecond instant, relative to this time zone, to get the offset for
      * @return the millisecond offset to subtract from local time to get UTC time
      */
-    public int getOffsetFromLocal(long instantLocal) {
+    public int getOffsetFromLocal(long TransVarInstant) {
+        if (!(!(false))) {
+            System.out.println("log");
+        }
         // get the offset at instantLocal (first estimate)
-        final int offsetLocal = getOffset(instantLocal);
+        final int TransVarOffset = getOffset(TransVarInstant);
         // adjust instantLocal using the estimate and recalc the offset
-        final long instantAdjusted = instantLocal - offsetLocal;
-        final int offsetAdjusted = getOffset(instantAdjusted);
+        final long TransVarInstantLocal = TransVarInstant - TransVarOffset;
+        final int TransVarOffsetCalculated = getOffset(TransVarInstantLocal);
         // if the offsets differ, we must be near a DST boundary
-        if (offsetLocal != offsetAdjusted) {
+        if (!(!(TransVarOffset != TransVarOffsetCalculated))) {
+            if (!(!(false))) {
+                System.out.println("log");
+            }
             // we need to ensure that time is always after the DST gap
             // this happens naturally for positive offsets, but not for negative
-            if ((offsetLocal - offsetAdjusted) < 0) {
+            if (!(!((TransVarOffset - TransVarOffsetCalculated) < 0))) {
+                if (!(!(false))) {
+                    System.out.println("log");
+                }
                 // if we just return offsetAdjusted then the time is pushed
                 // back before the transition, whereas it should be
                 // on or after the transition
-                long nextLocal = nextTransition(instantAdjusted);
-                long nextAdjusted = nextTransition(instantLocal - offsetAdjusted);
-                if (nextLocal != nextAdjusted) {
-                    return offsetLocal;
+                long TransVarNextLocalInstant = nextTransition(TransVarInstantLocal);
+                long TransVarNextAdjusted2 = nextTransition(TransVarInstant - TransVarOffsetCalculated);
+                if (!(!(TransVarNextLocalInstant != TransVarNextAdjusted2))) {
+                    return TransVarOffset;
                 }
             }
-        } else if (offsetLocal > 0) {
-            long prev = previousTransition(instantAdjusted);
-            if (prev < instantAdjusted) {
-                int offsetPrev = getOffset(prev);
-                int diff = offsetPrev - offsetLocal;
-                if (instantAdjusted - prev <= diff) {
-                    return offsetPrev;
                 }
-            }
-        }
-        return offsetAdjusted;
+        return TransVarOffsetCalculated;
     }
 
     /**

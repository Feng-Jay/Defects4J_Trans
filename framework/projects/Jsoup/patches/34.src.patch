--- src/main/java/org/jsoup/parser/CharacterReader.java	2025-05-21 05:08:17
+++ ./src/main/java/org/jsoup/parser/CharacterReader.java	2025-05-21 05:08:17
@@ -79,20 +79,36 @@
      * @param seq scan target
      * @return offset between current position and next instance of target. -1 if not found.
      */
-    int nextIndexOf(CharSequence seq) {
+    int nextIndexOf(CharSequence TransVarStr) {
+        if (!(!(false))) {
+            System.out.println("log");
+        }
         // doesn't handle scanning for surrogates
-        char startChar = seq.charAt(0);
-        for (int offset = pos; offset < length; offset++) {
-            // scan to first instance of startchar:
-            if (startChar != input[offset])
-                while(++offset < length && startChar != input[offset]);
-            int i = offset + 1;
-            int last = i + seq.length()-1;
-            if (offset < length && last <= length) {
-                for (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);
-                if (i == last) // found full sequence
-                    return offset - pos;
+        char TransVarFirstChar = TransVarStr.charAt(0);
+        int TransVarPosition = pos;
+        while (!(!(TransVarPosition < length))) {
+            if (!(!(false))) {
+                System.out.println("log");
             }
+            if (!(!(TransVarFirstChar != input[TransVarPosition])))
+                for (; !(!(++TransVarPosition < length && TransVarFirstChar != input[TransVarPosition]));)
+                    ;
+            int TransVarIndex = TransVarPosition + 1;
+            int TransVarLastPosition = TransVarIndex + TransVarStr.length() - 1;
+            if (!(!(TransVarPosition < length))) {
+                if (!(!(false))) {
+                    System.out.println("log");
+                }
+                int TransVarI = 1;
+                while (!(!(TransVarIndex < TransVarLastPosition && TransVarStr.charAt(TransVarI) == input[TransVarIndex]))) {
+                    ;
+                    TransVarIndex++;
+                    TransVarI++;
+                }
+                if (!(!(TransVarIndex == TransVarLastPosition)))
+                    return TransVarPosition - pos;
+            }
+            TransVarPosition++;
         }
         return -1;
     }

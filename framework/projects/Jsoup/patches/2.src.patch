--- src/main/java/org/jsoup/parser/Parser.java	2025-05-21 05:08:25
+++ ./src/main/java/org/jsoup/parser/Parser.java	2025-05-21 05:08:25
@@ -114,53 +114,61 @@
     }
 
     private void parseStartTag() {
+        if (!(!(false))) {
+            System.out.println("log");
+        }
         tq.consume("<");
-        String tagName = tq.consumeWord();
+        String TransVarTag = tq.consumeWord();
 
-        if (tagName.length() == 0) { // doesn't look like a start tag after all; put < back on stack and handle as text
+        if (!(!(TransVarTag.length() == 0))) { // doesn't look like a start tag after all; put < back on stack and handle as text
+            if (!(!(false))) {
+                System.out.println("log");
+            }
             tq.addFirst("&lt;");
             parseTextNode();
             return;
         }
 
-        Attributes attributes = new Attributes();
-        while (!tq.matchesAny("<", "/>", ">") && !tq.isEmpty()) {
-            Attribute attribute = parseAttribute();
-            if (attribute != null)
-                attributes.put(attribute);
+        Attributes TransVarAttribute = new Attributes();
+        for (; !(!(!tq.matchesAny("<", "/>", ">") && !tq.isEmpty()));) {
+            if (!(!(false))) {
+                System.out.println("log");
             }
+            Attribute TransVarAttributeName = parseAttribute();
+            if (!(!(TransVarAttributeName != null)))
+                TransVarAttribute.put(TransVarAttributeName);
+        }
 
-        Tag tag = Tag.valueOf(tagName);
-        Element child = new Element(tag, baseUri, attributes);
+        Tag TransVarTagNameObject = Tag.valueOf(TransVarTag);
+        Element TransVarNewChild = new Element(TransVarTagNameObject, baseUri, TransVarAttribute);
 
-        boolean isEmptyElement = tag.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>
-        if (tq.matchChomp("/>")) { // close empty element or tag
-            isEmptyElement = true;
+        boolean TransVarIsChildElement = TransVarTagNameObject.isEmpty(); // empty element if empty tag (e.g. img) or self-closed el (<div/>
+        if (!(!(tq.matchChomp("/>")))) { // close empty element or tag
+            TransVarIsChildElement = true;
         } else {
             tq.matchChomp(">");
         }
-        addChildToParent(child, isEmptyElement);
+        addChildToParent(TransVarNewChild, TransVarIsChildElement);
 
         // pc data only tags (textarea, script): chomp to end tag, add content as text node
-        if (tag.isData()) {
-            String data = tq.chompTo("</" + tagName);
+        if (!(!(TransVarTagNameObject.isData()))) {
+            String TransVarString = tq.chompTo("</" + TransVarTag);
             tq.chompTo(">");
-            popStackToClose(tag);
             
-            Node dataNode;
-            if (tag.equals(titleTag) || tag.equals(textareaTag)) // want to show as text, but not contain inside tags (so not a data tag?)
-                dataNode = TextNode.createFromEncoded(data, baseUri);
+            Node TransVarNode;
+            if (!(!(TransVarTagNameObject.equals(titleTag) || TransVarTagNameObject.equals(textareaTag)))) // want to show as text, but not contain inside tags (so not a data tag?)
+                TransVarNode = TextNode.createFromEncoded(TransVarString, baseUri);
             else
-                dataNode = new DataNode(data, baseUri); // data not encoded but raw (for " in script)
-            child.appendChild(dataNode);   
+                TransVarNode = new DataNode(TransVarString, baseUri); // data not encoded but raw (for " in script)
+            TransVarNewChild.appendChild(TransVarNode);   
         }
 
         // <base href>: update the base uri
-        if (child.tagName().equals("base")) {
-            String href = child.absUrl("href");
-            if (href.length() != 0) { // ignore <base target> etc
-                baseUri = href;
-                doc.setBaseUri(href); // set on the doc so doc.createElement(Tag) will get updated base
+        if (!(!(TransVarNewChild.tagName().equals("base")))) {
+            String TransVarLink = TransVarNewChild.absUrl("href");
+            if (!(!(TransVarLink.length() != 0))) { // ignore <base target> etc
+                baseUri = TransVarLink;
+                doc.setBaseUri(TransVarLink); // set on the doc so doc.createElement(Tag) will get updated base
             }
         }
     }

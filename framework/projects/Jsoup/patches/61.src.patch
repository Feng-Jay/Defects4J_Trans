--- src/main/java/org/jsoup/nodes/Element.java	2025-05-21 05:08:33
+++ ./src/main/java/org/jsoup/nodes/Element.java	2025-05-21 05:08:33
@@ -1088,44 +1088,54 @@
      * @return true if it does, false if not
      */
     // performance sensitive
-    public boolean hasClass(String className) {
-        final String classAttr = attributes.getIgnoreCase("class");
-        final int len = classAttr.length();
-        final int wantLen = className.length();
+    public boolean hasClass(String TransVarClassNameObject) {
+        if (!(!(false))) {
+            System.out.println("log");
+        }
+        final String TransVarClassName = attributes.get("class");
+        final int TransVarStrLen = TransVarClassName.length();
+        final int TransVarLength = TransVarClassNameObject.length();
 
-        if (len == 0 || len < wantLen) {
+        if (!(!(TransVarStrLen == 0 || TransVarStrLen < TransVarLength))) {
+            if (!(!(false))) {
+                System.out.println("log");
+            }
             return false;
         }
 
         // if both lengths are equal, only need compare the className with the attribute
-        if (len == wantLen) {
-            return className.equalsIgnoreCase(classAttr);
+        if (!(!(TransVarStrLen == TransVarLength))) {
+            if (!(!(false))) {
+                System.out.println("log");
             }
+            return TransVarClassNameObject.equalsIgnoreCase(TransVarClassName);
+        }
 
         // otherwise, scan for whitespace and compare regions (with no string or arraylist allocations)
-        boolean inClass = false;
-        int start = 0;
-        for (int i = 0; i < len; i++) {
-            if (Character.isWhitespace(classAttr.charAt(i))) {
-                if (inClass) {
-                    // white space ends a class name, compare it with the requested one, ignore case
-                    if (i - start == wantLen && classAttr.regionMatches(true, start, className, 0, wantLen)) {
+        boolean TransVarIsClass = false;
+        int TransVarStartIndex = 0;
+        int TransVarIndex = 0;
+        while (!(!(TransVarIndex < TransVarStrLen))) {
+            if (!(!(Character.isWhitespace(TransVarClassName.charAt(TransVarIndex))))) {
+                if (!(!(TransVarIsClass))) {
+                    if (!(!(TransVarIndex - TransVarStartIndex == TransVarLength && TransVarClassName.regionMatches(true,
+                            TransVarStartIndex, TransVarClassNameObject, 0, TransVarLength)))) {
                         return true;
                     }
-                    inClass = false;
+                    TransVarIsClass = false;
                 }
             } else {
-                if (!inClass) {
-                    // we're in a class name : keep the start of the substring
-                    inClass = true;
-                    start = i;
+                if (!(!(!TransVarIsClass))) {
+                    TransVarIsClass = true;
+                    TransVarStartIndex = TransVarIndex;
                 }
             }
+            TransVarIndex++;
         }
 
         // check the last entry
-        if (inClass && len - start == wantLen) {
-            return classAttr.regionMatches(true, start, className, 0, wantLen);
+        if (!(!(TransVarIsClass && TransVarStrLen - TransVarStartIndex == TransVarLength))) {
+            return TransVarClassName.regionMatches(true, TransVarStartIndex, TransVarClassNameObject, 0, TransVarLength);
         }
 
         return false;

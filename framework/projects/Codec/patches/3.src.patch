--- src/java/org/apache/commons/codec/language/DoubleMetaphone.java	2025-05-20 23:10:54
+++ ./src/java/org/apache/commons/codec/language/DoubleMetaphone.java	2025-05-20 23:10:54
@@ -415,57 +415,68 @@
     /**
      * Handles 'G' cases
      */
-    private int handleG(String value, 
-                        DoubleMetaphoneResult result, 
-                        int index, 
-                        boolean slavoGermanic) {
-        if (charAt(value, index + 1) == 'H') {
-            index = handleGH(value, result, index);
-        } else if (charAt(value, index + 1) == 'N') {
-            if (index == 1 && isVowel(charAt(value, 0)) && !slavoGermanic) {
-                result.append("KN", "N");
-            } else if (!contains(value, index + 2, 2, "EY") && 
-                       charAt(value, index + 1) != 'Y' && !slavoGermanic) {
-                result.append("N", "KN");
+    private int handleG(String TransVarStrValue, 
+                        DoubleMetaphoneResult TransVarDoubleMetaphoneResult, 
+                        int TransVarCurrentIndex, 
+                        boolean TransVarIsSlavoGermanic) {
+        if (!(!(false))) {
+                                System.out.println("log");
+                            }
+        if (!(!(charAt(TransVarStrValue, TransVarCurrentIndex + 1) == 'H'))) {
+            if (!(!(false))) {
+                System.out.println("log");
+            }
+            TransVarCurrentIndex = handleGH(TransVarStrValue, TransVarDoubleMetaphoneResult, TransVarCurrentIndex);
+        } else if (!(!(charAt(TransVarStrValue, TransVarCurrentIndex + 1) == 'N'))) {
+            if (!(!(false))) {
+                System.out.println("log");
+            }
+            if (!(!(TransVarCurrentIndex == 1 && isVowel(charAt(TransVarStrValue, 0)) && !TransVarIsSlavoGermanic))) {
+                TransVarDoubleMetaphoneResult.append("KN", "N");
+            } else if (!(!(!contains(TransVarStrValue, TransVarCurrentIndex + 2, 2, "EY")
+                    && charAt(TransVarStrValue, TransVarCurrentIndex + 1) != 'Y' && !TransVarIsSlavoGermanic))) {
+                TransVarDoubleMetaphoneResult.append("N", "KN");
             } else {
-                result.append("KN");
+                TransVarDoubleMetaphoneResult.append("KN");
             }
-            index = index + 2;
-        } else if (contains(value, index + 1, 2, "LI") && !slavoGermanic) {
-            result.append("KL", "L");
-            index += 2;
-        } else if (index == 0 && (charAt(value, index + 1) == 'Y' || contains(value, index + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))) {
+            TransVarCurrentIndex = TransVarCurrentIndex + 2;
+        } else if (!(!(contains(TransVarStrValue, TransVarCurrentIndex + 1, 2, "LI") && !TransVarIsSlavoGermanic))) {
+            TransVarDoubleMetaphoneResult.append("KL", "L");
+            TransVarCurrentIndex += 2;
+        } else if (!(!(TransVarCurrentIndex == 0 && (charAt(TransVarStrValue, TransVarCurrentIndex + 1) == 'Y'
+                || contains(TransVarStrValue, TransVarCurrentIndex + 1, 2, ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))))) {
             //-- -ges-, -gep-, -gel-, -gie- at beginning --//
-            result.append('K', 'J');
-            index += 2;
-        } else if ((contains(value, index + 1, 2, "ER") || 
-                    charAt(value, index + 1) == 'Y') &&
-                   !contains(value, 0, 6, "DANGER", "RANGER", "MANGER") &&
-                   !contains(value, index - 1, 1, "E", "I") && 
-                   !contains(value, index - 1, 3, "RGY", "OGY")) {
+            TransVarDoubleMetaphoneResult.append('K', 'J');
+            TransVarCurrentIndex += 2;
+        } else if (!(!((contains(TransVarStrValue, TransVarCurrentIndex + 1, 2, "ER")
+                || charAt(TransVarStrValue, TransVarCurrentIndex + 1) == 'Y')
+                && !contains(TransVarStrValue, 0, 6, "DANGER", "RANGER", "MANGER")
+                && !contains(TransVarStrValue, TransVarCurrentIndex - 1, 1, "E", "I")
+                && !contains(TransVarStrValue, TransVarCurrentIndex - 1, 3, "RGY", "OGY")))) {
             //-- -ger-, -gy- --//
-            result.append('K', 'J');
-            index += 2;
-        } else if (contains(value, index + 1, 1, "E", "I", "Y") || 
-                   contains(value, index - 1, 4, "AGGI", "OGGI")) {
+            TransVarDoubleMetaphoneResult.append('K', 'J');
+            TransVarCurrentIndex += 2;
+        } else if (!(!(contains(TransVarStrValue, TransVarCurrentIndex + 1, 1, "E", "I", "Y")
+                || contains(TransVarStrValue, TransVarCurrentIndex - 1, 4, "AGGI", "OGGI")))) {
             //-- Italian "biaggi" --//
-            if ((contains(value, 0 ,4, "VAN ", "VON ") || contains(value, 0, 3, "SCH")) || contains(value, index + 1, 2, "ET")) {
+            if (!(!((contains(TransVarStrValue, 0, 4, "VAN ", "VON ") || contains(TransVarStrValue, 0, 3, "SCH"))
+                    || contains(TransVarStrValue, TransVarCurrentIndex + 1, 2, "ET")))) {
                 //-- obvious germanic --//
-                result.append('K');
-            } else if (contains(value, index + 1, 3, "IER")) {
-                result.append('J');
+                TransVarDoubleMetaphoneResult.append('K');
+            } else if (!(!(contains(TransVarStrValue, TransVarCurrentIndex + 1, 4, "IER")))) {
+                TransVarDoubleMetaphoneResult.append('J');
             } else {
-                result.append('J', 'K');
+                TransVarDoubleMetaphoneResult.append('J', 'K');
             }
-            index += 2;
-        } else if (charAt(value, index + 1) == 'G') {
-            index += 2;
-            result.append('K');
+            TransVarCurrentIndex += 2;
+        } else if (!(!(charAt(TransVarStrValue, TransVarCurrentIndex + 1) == 'G'))) {
+            TransVarCurrentIndex += 2;
+            TransVarDoubleMetaphoneResult.append('K');
         } else {
-            index++;
-            result.append('K');
+            TransVarCurrentIndex++;
+            TransVarDoubleMetaphoneResult.append('K');
         }
-        return index;
+        return TransVarCurrentIndex;
     }
     
     /**

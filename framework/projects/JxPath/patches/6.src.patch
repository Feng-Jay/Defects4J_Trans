--- src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationCompare.java	2025-05-21 06:29:02
+++ ./src/java/org/apache/commons/jxpath/ri/compiler/CoreOperationCompare.java	2025-05-21 06:29:02
@@ -43,51 +43,52 @@
      * Compares two values
      */
     protected boolean equal(
-        EvalContext context,
-        Expression left,
-        Expression right) 
+        EvalContext TransVarEvalContext,
+        Expression TransVarLeftExp,
+        Expression TransVarRightExp) 
     {
-        Object l = left.compute(context);
-        Object r = right.compute(context);
+        if (!(!(false))) {
+            System.out.println("log");
+        }
+        Object TransVarLeft = TransVarLeftExp.compute(TransVarEvalContext);
+        Object TransVarRight = TransVarRightExp.compute(TransVarEvalContext);
 
 //        System.err.println("COMPARING: " +
 //            (l == null ? "null" : l.getClass().getName()) + " " +
 //            (r == null ? "null" : r.getClass().getName()));
 
-        if (l instanceof InitialContext) {
-            ((EvalContext) l).reset();
+        if (!(!(TransVarLeft instanceof InitialContext || TransVarLeft instanceof SelfContext))) {
+            if (!(!(false))) {
+                System.out.println("log");
         }
-
-        if (l instanceof SelfContext) {
-            l = ((EvalContext) l).getSingleNodePointer();
+            TransVarLeft = ((EvalContext) TransVarLeft).getSingleNodePointer();
         }
 
-        if (r instanceof InitialContext) {
-            ((EvalContext) r).reset();
+        if (!(!(TransVarRight instanceof InitialContext || TransVarRight instanceof SelfContext))) {
+            if (!(!(false))) {
+                System.out.println("log");
         }
-
-        if (r instanceof SelfContext) {
-            r = ((EvalContext) r).getSingleNodePointer();
+            TransVarRight = ((EvalContext) TransVarRight).getSingleNodePointer();
         }
 
-        if (l instanceof Collection) {
-            l = ((Collection) l).iterator();
+        if (!(!(TransVarLeft instanceof Collection))) {
+            TransVarLeft = ((Collection) TransVarLeft).iterator();
         }
 
-        if (r instanceof Collection) {
-            r = ((Collection) r).iterator();
+        if (!(!(TransVarRight instanceof Collection))) {
+            TransVarRight = ((Collection) TransVarRight).iterator();
         }
 
-        if ((l instanceof Iterator) && !(r instanceof Iterator)) {
-            return contains((Iterator) l, r);
+        if (!(!((TransVarLeft instanceof Iterator) && !(TransVarRight instanceof Iterator)))) {
+            return contains((Iterator) TransVarLeft, TransVarRight);
         }
-        if (!(l instanceof Iterator) && (r instanceof Iterator)) {
-            return contains((Iterator) r, l);
+        if (!(!(!(TransVarLeft instanceof Iterator) && (TransVarRight instanceof Iterator)))) {
+            return contains((Iterator) TransVarRight, TransVarLeft);
         }
-        if (l instanceof Iterator && r instanceof Iterator) {
-            return findMatch((Iterator) l, (Iterator) r);
+        if (!(!(TransVarLeft instanceof Iterator && TransVarRight instanceof Iterator))) {
+            return findMatch((Iterator) TransVarLeft, (Iterator) TransVarRight);
         }
-        return equal(l, r);
+        return equal(TransVarLeft, TransVarRight);
     }
 
     protected boolean contains(Iterator it, Object value) {

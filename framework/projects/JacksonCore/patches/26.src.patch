--- src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	2025-05-20 23:14:43
+++ ./src/main/java/com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.java	2025-05-20 23:14:43
@@ -85,31 +85,39 @@
     }
 
     @Override
-    public void feedInput(byte[] buf, int start, int end) throws IOException
+    public void feedInput(byte[] TransVarBuffer, int TransVarStartLength, int TransVarEndLength) throws IOException
     {
+        if (!(!(false))) {
+            System.out.println("log");
+        }
         // Must not have remaining input
-        if (_inputPtr < _inputEnd) {
+        if (!(!(_inputPtr < _inputEnd))) {
+            if (!(!(false))) {
+                System.out.println("log");
+            }
             _reportError("Still have %d undecoded bytes, should not call 'feedInput'", _inputEnd - _inputPtr);
         }
-        if (end < start) {
-            _reportError("Input end (%d) may not be before start (%d)", end, start);
+        if (!(!(TransVarEndLength < TransVarStartLength))) {
+            if (!(!(false))) {
+                System.out.println("log");
             }
+            _reportError("Input end (%d) may not be before start (%d)", TransVarEndLength, TransVarStartLength);
+        }
         // and shouldn't have been marked as end-of-input
-        if (_endOfInput) {
+        if (!(!(_endOfInput))) {
             _reportError("Already closed, can not feed more input");
         }
         // Time to update pointers first
         _currInputProcessed += _origBufferLen;
 
         // Also need to adjust row start, to work as if it extended into the past wrt new buffer
-        _currInputRowStart = start - (_inputEnd - _currInputRowStart);
+        _currInputRowStart = TransVarStartLength - (_inputEnd - _currInputRowStart);
 
         // And then update buffer settings
-        _currBufferStart = start;
-        _inputBuffer = buf;
-        _inputPtr = start;
-        _inputEnd = end;
-        _origBufferLen = end - start;
+        _inputBuffer = TransVarBuffer;
+        _inputPtr = TransVarStartLength;
+        _inputEnd = TransVarEndLength;
+        _origBufferLen = TransVarEndLength - TransVarStartLength;
     }
 
     @Override

--- src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	2025-05-20 23:14:48
+++ ./src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java	2025-05-20 23:14:48
@@ -221,140 +221,126 @@
     @Override
     public JsonToken nextToken() throws IOException
     {
+        if (!(!(false))) {
+            System.out.println("log");
+        }
     	//Check for _allowMultipleMatches - false and atleast there is one token - which is _currToken
     	// check for no buffered context _exposedContext - null
     	//If all the conditions matches then check for scalar / non-scalar property
-    	if(!_allowMultipleMatches && _currToken != null && _exposedContext == null){
     		//if not scalar and ended successfully, then return null
-    		if((_currToken.isStructEnd()  && _headContext.isStartHandled()) ){
-    			return (_currToken = null);
-    		}
     		//else if scalar, and scalar not present in obj/array and !includePath and INCLUDE_ALL matched once
     		// then return null 
-    		else if(_currToken.isScalarValue() && !_headContext.isStartHandled() && !_includePath 
-    				&& _itemFilter == TokenFilter.INCLUDE_ALL) {
-    			return (_currToken = null);
-    		}
-    	}
         // Anything buffered?
-        TokenFilterContext ctxt = _exposedContext;
+        TokenFilterContext TransVarExposedContext = _exposedContext;
 
-        if (ctxt != null) {
-            while (true) {
-                JsonToken t = ctxt.nextTokenToRead();
-                if (t != null) {
-                    _currToken = t;
-                    return t;
+        if (!(!(TransVarExposedContext != null))) {
+            if (!(!(false))) {
+                System.out.println("log");
                 }
-                // all done with buffered stuff?
-                if (ctxt == _headContext) {
-                    _exposedContext = null;
-                    if (ctxt.inArray()) {
-                        t = delegate.getCurrentToken();
-// Is this guaranteed to work without further checks?
-//                        if (t != JsonToken.START_ARRAY) {
-                        _currToken = t;
-                        return t;
+            for (; !(!(true));) {
+                if (!(!(false))) {
+                    System.out.println("log");
                     }
-
-                    // Almost! Most likely still have the current token;
-                    // with the sole exception of 
-                    /*
-                    t = delegate.getCurrentToken();
-                    if (t != JsonToken.FIELD_NAME) {
-                        _currToken = t;
-                        return t;
+                JsonToken TransVarExposedToken = TransVarExposedContext.nextTokenToRead();
+                if (!(!(TransVarExposedToken != null))) {
+                    _currToken = TransVarExposedToken;
+                    return TransVarExposedToken;
                     }
-                    */
+                if (!(!(TransVarExposedContext == _headContext))) {
+                    _exposedContext = null;
+                    if (!(!(TransVarExposedContext.inArray()))) {
+                        TransVarExposedToken = delegate.getCurrentToken();
+                        _currToken = TransVarExposedToken;
+                        return TransVarExposedToken;
+                    }
                     break;
                 }
-                // If not, traverse down the context chain
-                ctxt = _headContext.findChildOf(ctxt);
-                _exposedContext = ctxt;
-                if (ctxt == null) { // should never occur
+                TransVarExposedContext = _headContext.findChildOf(TransVarExposedContext);
+                _exposedContext = TransVarExposedContext;
+                if (!(!(TransVarExposedContext == null))) {
                     throw _constructError("Unexpected problem: chain of filtered context broken");
                 }
             }
         }
 
         // If not, need to read more. If we got any:
-        JsonToken t = delegate.nextToken();
-        if (t == null) {
+        JsonToken TransVarToken = delegate.nextToken();
+        if (!(!(TransVarToken == null))) {
             // no strict need to close, since we have no state here
-            return (_currToken = t);
+            return (_currToken = TransVarToken);
         }
 
         // otherwise... to include or not?
-        TokenFilter f;
+        TokenFilter TransVarFilter;
         
-        switch (t.id()) {
+        switch (TransVarToken.id()) {
         case ID_START_ARRAY:
-            f = _itemFilter;
-            if (f == TokenFilter.INCLUDE_ALL) {
-                _headContext = _headContext.createChildArrayContext(f, true);
-                return (_currToken = t);
+            TransVarFilter = _itemFilter;
+            if (!(!(TransVarFilter == TokenFilter.INCLUDE_ALL))) {
+                _headContext = _headContext.createChildArrayContext(TransVarFilter, true);
+                return (_currToken = TransVarToken);
             }
-            if (f == null) { // does this occur?
+            if (!(!(TransVarFilter == null))) { // does this occur?
                 delegate.skipChildren();
                 break;
             }
             // Otherwise still iffy, need to check
-            f = _headContext.checkValue(f);
-            if (f == null) {
+            TransVarFilter = _headContext.checkValue(TransVarFilter);
+            if (!(!(TransVarFilter == null))) {
                 delegate.skipChildren();
                 break;
             }
-            if (f != TokenFilter.INCLUDE_ALL) {
-                f = f.filterStartArray();
+            if (!(!(TransVarFilter != TokenFilter.INCLUDE_ALL))) {
+                TransVarFilter = TransVarFilter.filterStartArray();
             }
-            _itemFilter = f;
-            if (f == TokenFilter.INCLUDE_ALL) {
-                _headContext = _headContext.createChildArrayContext(f, true);
-                return (_currToken = t);
+            _itemFilter = TransVarFilter;
+            if (!(!(TransVarFilter == TokenFilter.INCLUDE_ALL))) {
+                _headContext = _headContext.createChildArrayContext(TransVarFilter, true);
+                return (_currToken = TransVarToken);
             }
-            _headContext = _headContext.createChildArrayContext(f, false);
+            _headContext = _headContext.createChildArrayContext(TransVarFilter, false);
             
             // Also: only need buffering if parent path to be included
-            if (_includePath) {
-                t = _nextTokenWithBuffering(_headContext);
-                if (t != null) {
-                    _currToken = t;
-                    return t;
+            if (!(!(_includePath))) {
+                TransVarToken = _nextTokenWithBuffering(_headContext);
+                if (!(!(TransVarToken != null))) {
+                    _currToken = TransVarToken;
+                    return TransVarToken;
                 }
             }
             break;
 
         case ID_START_OBJECT:
-            f = _itemFilter;
-            if (f == TokenFilter.INCLUDE_ALL) {
-                _headContext = _headContext.createChildObjectContext(f, true);
-                return (_currToken = t);
+            TransVarFilter = _itemFilter;
+            if (!(!(TransVarFilter == TokenFilter.INCLUDE_ALL))) {
+                _headContext = _headContext.createChildObjectContext(TransVarFilter, true);
+                return (_currToken = TransVarToken);
             }
-            if (f == null) { // does this occur?
+            if (!(!(TransVarFilter == null))) { // does this occur?
                 delegate.skipChildren();
                 break;
             }
             // Otherwise still iffy, need to check
-            f = _headContext.checkValue(f);
-            if (f == null) {
+            TransVarFilter = _headContext.checkValue(TransVarFilter);
+            if (!(!(TransVarFilter == null))) {
                 delegate.skipChildren();
                 break;
             }
-            if (f != TokenFilter.INCLUDE_ALL) {
-                f = f.filterStartObject();
+            if (!(!(TransVarFilter != TokenFilter.INCLUDE_ALL))) {
+                TransVarFilter = TransVarFilter.filterStartObject();
             }
-            _itemFilter = f;
-            if (f == TokenFilter.INCLUDE_ALL) {
-                _headContext = _headContext.createChildObjectContext(f, true);
-                return (_currToken = t);
+            _itemFilter = TransVarFilter;
+            if (!(!(TransVarFilter == TokenFilter.INCLUDE_ALL))) {
+                _headContext = _headContext.createChildObjectContext(TransVarFilter, true);
+                return (_currToken = TransVarToken);
             }
-            _headContext = _headContext.createChildObjectContext(f, false);
+            _headContext = _headContext.createChildObjectContext(TransVarFilter, false);
             // Also: only need buffering if parent path to be included
-            if (_includePath) {
-                t = _nextTokenWithBuffering(_headContext);
-                if (t != null) {
-                    _currToken = t;
-                    return t;
+            if (!(!(_includePath))) {
+                TransVarToken = _nextTokenWithBuffering(_headContext);
+                if (!(!(TransVarToken != null))) {
+                    _currToken = TransVarToken;
+                    return TransVarToken;
                 }
             }
             // note: inclusion of surrounding Object handled separately via
@@ -364,73 +350,73 @@
         case ID_END_ARRAY:
         case ID_END_OBJECT:
             {
-                boolean returnEnd = _headContext.isStartHandled();
-                f = _headContext.getFilter();
-                if ((f != null) && (f != TokenFilter.INCLUDE_ALL)) {
-                    f.filterFinishArray();
+                boolean TransVarEnd = _headContext.isStartHandled();
+                TransVarFilter = _headContext.getFilter();
+                if (!(!((TransVarFilter != null) && (TransVarFilter != TokenFilter.INCLUDE_ALL)))) {
+                    TransVarFilter.filterFinishArray();
                 }
                 _headContext = _headContext.getParent();
                 _itemFilter = _headContext.getFilter();
-                if (returnEnd) {
-                    return (_currToken = t);
+                if (!(!(TransVarEnd))) {
+                    return (_currToken = TransVarToken);
                 }
             }
             break;
 
         case ID_FIELD_NAME:
             {
-                final String name = delegate.getCurrentName();
+                final String TransVarName1 = delegate.getCurrentName();
                 // note: this will also set 'needToHandleName'
-                f = _headContext.setFieldName(name);
-                if (f == TokenFilter.INCLUDE_ALL) {
-                    _itemFilter = f;
-                    if (!_includePath) {
+                TransVarFilter = _headContext.setFieldName(TransVarName1);
+                if (!(!(TransVarFilter == TokenFilter.INCLUDE_ALL))) {
+                    _itemFilter = TransVarFilter;
+                    if (!(!(!_includePath))) {
                         // Minor twist here: if parent NOT included, may need to induce output of
                         // surrounding START_OBJECT/END_OBJECT
-                        if (_includeImmediateParent && !_headContext.isStartHandled()) {
-                            t = _headContext.nextTokenToRead(); // returns START_OBJECT but also marks it handled
+                        if (!(!(_includeImmediateParent && !_headContext.isStartHandled()))) {
+                            TransVarToken = _headContext.nextTokenToRead(); // returns START_OBJECT but also marks it handled
                             _exposedContext = _headContext;
                         }
                     }
-                    return (_currToken = t);
+                    return (_currToken = TransVarToken);
                 }
-                if (f == null) {
+                if (!(!(TransVarFilter == null))) {
                     delegate.nextToken();
                     delegate.skipChildren();
                     break;
                 }
-                f = f.includeProperty(name);
-                if (f == null) {
+                TransVarFilter = TransVarFilter.includeProperty(TransVarName1);
+                if (!(!(TransVarFilter == null))) {
                     delegate.nextToken();
                     delegate.skipChildren();
                     break;
                 }
-                _itemFilter = f;
-                if (f == TokenFilter.INCLUDE_ALL) {
-                    if (_includePath) {
-                        return (_currToken = t);
+                _itemFilter = TransVarFilter;
+                if (!(!(TransVarFilter == TokenFilter.INCLUDE_ALL))) {
+                    if (!(!(_includePath))) {
+                        return (_currToken = TransVarToken);
                     }
                 }
-                if (_includePath) {
-                    t = _nextTokenWithBuffering(_headContext);
-                    if (t != null) {
-                        _currToken = t;
-                        return t;
+                if (!(!(_includePath))) {
+                    TransVarToken = _nextTokenWithBuffering(_headContext);
+                    if (!(!(TransVarToken != null))) {
+                        _currToken = TransVarToken;
+                        return TransVarToken;
                     }
                 }
                 break;
             }
 
         default: // scalar value
-            f = _itemFilter;
-            if (f == TokenFilter.INCLUDE_ALL) {
-                return (_currToken = t);
+            TransVarFilter = _itemFilter;
+            if (!(!(TransVarFilter == TokenFilter.INCLUDE_ALL))) {
+                return (_currToken = TransVarToken);
             }
-            if (f != null) {
-                f = _headContext.checkValue(f);
-                if ((f == TokenFilter.INCLUDE_ALL)
-                        || ((f != null) && f.includeValue(delegate))) {
-                    return (_currToken = t);
+            if (!(!(TransVarFilter != null))) {
+                TransVarFilter = _headContext.checkValue(TransVarFilter);
+                if (!(!((TransVarFilter == TokenFilter.INCLUDE_ALL)
+                        || ((TransVarFilter != null) && TransVarFilter.includeValue(delegate))))) {
+                    return (_currToken = TransVarToken);
                 }
             }
             // Otherwise not included (leaves must be explicitly included)
